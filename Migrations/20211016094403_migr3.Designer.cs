// <auto-generated />
using System;
using MedicalRepSchedule;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace MedicalRepSchedule.Migrations
{
    [DbContext(typeof(RepresentativeScheduleContext))]
    [Migration("20211016094403_migr3")]
    partial class migr3
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.11")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MedicalRepSchedule.DoctorData", b =>
                {
                    b.Property<int>("DoctorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DoctorContactNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DoctorName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TreatingAilment")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DoctorId");

                    b.ToTable("DoctorDatas");

                    b.HasData(
                        new
                        {
                            DoctorId = 100,
                            DoctorContactNumber = "9884122113",
                            DoctorName = "D1",
                            TreatingAilment = "Orthopaedics"
                        },
                        new
                        {
                            DoctorId = 101,
                            DoctorContactNumber = "9876543210",
                            DoctorName = "D2",
                            TreatingAilment = "General"
                        },
                        new
                        {
                            DoctorId = 102,
                            DoctorContactNumber = "9876543211",
                            DoctorName = "D3",
                            TreatingAilment = "General"
                        },
                        new
                        {
                            DoctorId = 103,
                            DoctorContactNumber = "9876543212",
                            DoctorName = "D4",
                            TreatingAilment = "Orthopaedics"
                        },
                        new
                        {
                            DoctorId = 104,
                            DoctorContactNumber = "9876543213",
                            DoctorName = "D5",
                            TreatingAilment = "Gynaecology"
                        });
                });

            modelBuilder.Entity("MedicalRepSchedule.MedicinestockTable", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ChemicalComposition")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateOfExpiry")
                        .HasColumnType("datetime2");

                    b.Property<int>("NumberOfTabletsInStock")
                        .HasColumnType("int");

                    b.Property<string>("TargetAilment")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Name");

                    b.ToTable("MedicinestockTable");

                    b.HasData(
                        new
                        {
                            Name = "Dolo 650",
                            ChemicalComposition = "Paracetamol,Acetaminophen",
                            DateOfExpiry = new DateTime(2022, 12, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NumberOfTabletsInStock = 300,
                            TargetAilment = "General"
                        },
                        new
                        {
                            Name = "Orthoherb",
                            ChemicalComposition = "Castor Plant,Adulsa,Neem,Guggul",
                            DateOfExpiry = new DateTime(2021, 11, 26, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NumberOfTabletsInStock = 190,
                            TargetAilment = "Orthopaedics"
                        },
                        new
                        {
                            Name = "Cholecalciferol",
                            ChemicalComposition = "Ergocalciferol,Cholecalciferol,22-DiHydroergoCalciferol",
                            DateOfExpiry = new DateTime(2023, 11, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NumberOfTabletsInStock = 200,
                            TargetAilment = "Orthopaedics"
                        },
                        new
                        {
                            Name = "Gaviscon",
                            ChemicalComposition = "Magnesium,Oxide,Silicon,Sodium",
                            DateOfExpiry = new DateTime(2022, 8, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NumberOfTabletsInStock = 150,
                            TargetAilment = "General"
                        },
                        new
                        {
                            Name = "Hilact",
                            ChemicalComposition = "Pancreatin,Dimethicone,Polydimethylsiloxane",
                            DateOfExpiry = new DateTime(2024, 6, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NumberOfTabletsInStock = 400,
                            TargetAilment = "Gynaecology"
                        },
                        new
                        {
                            Name = "Cyclopam",
                            ChemicalComposition = "Dicyclomine,Hydrochloride,Paracetamol",
                            DateOfExpiry = new DateTime(2025, 11, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NumberOfTabletsInStock = 500,
                            TargetAilment = "Gynaecology"
                        });
                });

            modelBuilder.Entity("MedicalRepSchedule.RepresentativeSchedule", b =>
                {
                    b.Property<int>("ScheduleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateOfMeeting")
                        .HasColumnType("datetime2");

                    b.Property<string>("DoctorContactNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DoctorId")
                        .HasColumnType("int");

                    b.Property<string>("DoctorName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MedicineName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MeetingSlot")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TreatingAilment")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ScheduleId");

                    b.ToTable("RepresentativeSchedule");
                });
#pragma warning restore 612, 618
        }
    }
}
